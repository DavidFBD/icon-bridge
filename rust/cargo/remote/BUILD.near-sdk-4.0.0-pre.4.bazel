"""
@generated
cargo-raze crate build file.

DO NOT EDIT! Replaced on runs of cargo-raze
"""

# buildifier: disable=load
load("@bazel_skylib//lib:selects.bzl", "selects")

# buildifier: disable=load
load(
    "@rules_rust//rust:defs.bzl",
    "rust_binary",
    "rust_library",
    "rust_proc_macro",
    "rust_test",
)

package(default_visibility = [
    # Public for visibility by "@raze__crate__version//" targets.
    #
    # Prefer access through "//cargo", which limits external
    # visibility to explicit Cargo.toml dependencies.
    "//visibility:public",
])

licenses([
    "restricted",  # GPL-3.0 from expression "GPL-3.0"
])

# Generated Targets

rust_library(
    name = "near_sdk",
    srcs = glob(["**/*.rs"]),
    aliases = {
    },
    crate_features = [
        "default",
        "wee_alloc",
    ],
    crate_root = "near-sdk/src/lib.rs",
    data = [],
    edition = "2018",
    proc_macro_deps = [
        "@raze__near_sdk_macros__4_0_0_pre_4//:near_sdk_macros",
    ],
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "manual",
        "crate-name=near-sdk"
    ],
    version = "4.0.0-pre.4",
    # buildifier: leave-alone
    deps = [
        "@raze__base64__0_13_0//:base64",
        "@raze__borsh__0_8_2//:borsh",
        "@raze__bs58__0_4_0//:bs58",
        "@raze__near_sys__0_1_0//:near_sys",
        "@raze__serde__1_0_118//:serde",
        "@raze__serde_json__1_0_72//:serde_json",
        "@raze__wee_alloc__0_4_5//:wee_alloc",
    ] + selects.with_or({
        # cfg(not(target_arch = "wasm32"))
        (
            "@rules_rust//rust/platform:i686-apple-darwin",
            "@rules_rust//rust/platform:i686-pc-windows-msvc",
            "@rules_rust//rust/platform:i686-unknown-linux-gnu",
            "@rules_rust//rust/platform:x86_64-apple-darwin",
            "@rules_rust//rust/platform:x86_64-pc-windows-msvc",
            "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
            "@rules_rust//rust/platform:aarch64-apple-darwin",
            "@rules_rust//rust/platform:aarch64-apple-ios",
            "@rules_rust//rust/platform:aarch64-linux-android",
            "@rules_rust//rust/platform:aarch64-unknown-linux-gnu",
            "@rules_rust//rust/platform:arm-unknown-linux-gnueabi",
            "@rules_rust//rust/platform:i686-linux-android",
            "@rules_rust//rust/platform:i686-unknown-freebsd",
            "@rules_rust//rust/platform:powerpc-unknown-linux-gnu",
            "@rules_rust//rust/platform:s390x-unknown-linux-gnu",
            "@rules_rust//rust/platform:x86_64-apple-ios",
            "@rules_rust//rust/platform:x86_64-linux-android",
            "@rules_rust//rust/platform:x86_64-unknown-freebsd",
        ): [
            "@raze__near_primitives_core__0_1_0//:near_primitives_core",
            "@raze__near_vm_logic__3_0_0//:near_vm_logic",
        ],
        "//conditions:default": [],
    }),
)

# Unsupported target "code_size" with type "test" omitted

# Unsupported target "compilation_tests" with type "test" omitted
