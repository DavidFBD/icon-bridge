version = '0.1.0'

dependencies {
    compileOnly("foundation.icon:javaee-api:$javaeeVersion")
    implementation("foundation.icon:javaee-scorex:$scorexVersion")
    implementation project(':score-util')
    implementation project(':lib')
    implementation("com.github.sink772:javaee-tokens:0.6.0")

    testImplementation("org.junit.jupiter:junit-jupiter-api:5.6.0")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.6.0")

    testImplementation("org.mockito:mockito-core:3.3.3")
}

optimizedJar {
    mainClassName = 'foundation.icon.btp.nativecoin.NativeCoinService'
//    archivesBaseName = 'nativecoin'
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } { exclude "score/*" }
    enableDebug = !rootProject.hasProperty("release")
}

import foundation.icon.gradle.plugins.javaee.task.OptimizedJar

task optimizedJarIRC31(type: OptimizedJar) {
    mainClassName = 'foundation.icon.btp.nativecoin.irc31.OwnerBasedIRC31Supplier'
    archiveName("irc31-" + archiveVersion.get() + "." + archiveExtension.get());
    from { sourceSets.main.output }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } { exclude "score/*" }
    enableDebug = !rootProject.hasProperty("release")
}

deployJar {
    endpoints {
        gangnam {
            uri = 'https://gicon.net.solidwallet.io/api/v3'
            nid = 7
        }
        local {
            uri = 'http://localhost:9080/api/v3/src'
            nid = 0x944c77
        }
    }
    keystore = rootProject.hasProperty('keystoreName') ? "$keystoreName" : ''
    password = rootProject.hasProperty('keystorePass') ? "$keystorePass" : ''
    parameters {[
            arg('_bmc', 'cx...'),
            arg('_irc31', 'cx...'),
            arg('_name', 'src')
        ]
    }
}

test {
    useJUnitPlatform()
}
